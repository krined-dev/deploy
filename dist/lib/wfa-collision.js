import*as THREE from"three";export function coarseCollisionTest(t,e){let r;for(let o=0;o<e.length;o++){r=e[o];let i=new THREE.Vector3;i.setFromMatrixPosition(t.matrixWorld);let n=new THREE.Vector3;if(n.setFromMatrixPosition(r.matrixWorld),i.sub(n).length()<t.geometry.boundingSphere.radius+r.geometry.boundingSphere.radius)return!0}return!1}export function fineCollisionTest(t,e){let r,o,i,n=new THREE.Vector3;const s=t.geometry.attributes.position;for(let l=0;l<s.count;l++){n.fromBufferAttribute(s,l),n.applyMatrix4(t.matrixWorld);let a=new THREE.Vector3;if(a.setFromMatrixPosition(t.matrixWorld),r=n.sub(a),o=new THREE.Raycaster(a,r.clone().normalize()),i=o.intersectObjects(e),i.length>0&&i[0].distance<r.length())return!0}return!1}